from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import Message, InlineKeyboardMarkup, \
    InlineKeyboardButton, CallbackQuery

from general import dp, session
from models.Recipe import Recipe


class AddRecipe(StatesGroup):
    name = State()
    category = State()
    ingredients = State()
    description = State()
    photo = State()


@dp.callback_query_handler(text="add")
async def add_recipe(call: CallbackQuery):
    await call.message.answer(text='–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç! –î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ üë®üèª‚Äçüç≥')
    await AddRecipe.name.set()


@dp.message_handler(state=AddRecipe.name)
async def input_name(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['name'] = message.text

    keyboard = InlineKeyboardMarkup() \
        .row(InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞–∫ üç≥", callback_data="–∑–∞–≤—Ç—Ä–∞–∫")) \
        .row(InlineKeyboardButton(text="–û–±–µ–¥ üç≤", callback_data="–æ–±–µ–¥")) \
        .row(InlineKeyboardButton(text="–£–∂–∏–Ω üçù", callback_data="—É–∂–∏–Ω"))
    await message.answer(text="–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–µ—â–∞–µ—Ç –Ω–µ—á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≤–∞—à "
                              "—Ä–µ—Ü–µ–ø—Ç!", reply_markup=keyboard)
    await AddRecipe.category.set()


@dp.callback_query_handler(state=AddRecipe.category)
async def input_category(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        data['category'] = call.data
    await call.message.answer(
        text="–î—É–º–∞—é, —ç—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç –¥–ª—è " + call.data + "–∞! –í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "
                                                                      "\n\"–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç 1\" - \"–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\" "
                                                                      "\n\"–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç 2\" - \"–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ\"")
    await AddRecipe.ingredients.set()


@dp.message_handler(state=AddRecipe.ingredients)
async def input_ingredients(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['ingredients'] = message.text
    await message.answer(
        "–° –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å, –ø–µ—Ä–µ–π–¥—ë–º –∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é! –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–æ—Ç–æ–≤–∫–∏üë®üèª‚Äçüç≥")
    await AddRecipe.description.set()


@dp.message_handler(state=AddRecipe.description)
async def input_description(message: Message, state: FSMContext):
    async with state.proxy() as data:
        data['description'] = message.text
        print(data['name'])
        print(data['category'])
        print(data['description'])
    await message.answer(
        "–ì–æ—Ç–æ–≤–æ! –ò –≤–∏—à–µ–Ω–∫–∞ –Ω–∞ —Ç–æ—Ä—Ç–µ - –≤–∏–¥ –≥–æ—Ç–æ–≤–æ–≥–æ –±–ª—é–¥–∞üç∞ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")
    await AddRecipe.photo.set()


@dp.message_handler(content_types=['photo'], state=AddRecipe.photo)
async def input_photo(message: Message, state: FSMContext):
    await message.answer("–†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω! üòå")
    async with state.proxy() as data:
        data['photo'] = message.photo[-1].file_id
        new_recipe = Recipe(data['name'], data['ingredients'], data['category'], data['description'], data['photo'])
        print(new_recipe)
        session.add(new_recipe)
        session.commit()
    await state.finish()


@dp.message_handler(content_types=['text'], state=AddRecipe.photo)
async def input_photo(message: Message, state: FSMContext):
    await message.answer("–≠—Ç–æ –Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è üòî")
